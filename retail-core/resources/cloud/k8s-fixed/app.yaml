apiVersion: v1
kind: Service
metadata:
  name: sales
  namespace: rtc
spec:
  type: LoadBalancer
  selector:
    app: sales
    pod: sales-pod
  ports:
    - name: sales-port
      targetPort: 3000
      port: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sales-deployment
  namespace: rtc
  labels:
    app: sales
spec:
  replicas: 1
  selector:
    matchLabels:
      pod: sales-pod
  template:
    metadata:
      labels:
        app: sales
        pod: sales-pod
    spec:
      containers:
        - name: sales-container
          image: 405334307652.dkr.ecr.us-east-1.amazonaws.com/sales:1.0.3-prod
          ports:
            - containerPort: 3000
          readinessProbe:
            httpGet:
              path: /health
              scheme: HTTP
              httpHeaders:
                - name: Content-Type
                  value: application/json
              port: 3000
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /health
              scheme: HTTP
              httpHeaders:
                - name: Content-Type
                  value: application/json
              port: 3000
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 3
          resources:
            requests:
              cpu: 800m
              memory: 500Mi
          volumeMounts:
            - name: sales-volume-config
              mountPath: "/app/rel/retail_challenge/etc"
              readOnly: true
      volumes:
        - name: sales-volume-config
          configMap:
            name: sales-configmap
